{"version":3,"sources":["static/card-light.png","static/shop-light.png","static/ATM-light.png","utils/formSchema.js","reducer/index.js","context/index.js","utils/paymentMethods.js","components/PayByCredit.js","components/PayByShop.js","components/PayByAtm.js","components/PaymentCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","defaultSchema","credit","email","creditNumber","expireMonth","expireYear","cvv","shop","atm","PaymentFormReducer","state","action","method","data","Error","PaymentContext","createContext","paymentMethods","name","texts","img","imgCard","imgShop","imgATM","PayByCredit","useContext","paymentData","paymentDispatcher","useState","setCreditData","onFormChange","e","value","target","prev","inputName","split","inputIndex","Array","isArray","newCredit","className","type","onChange","autocomplete","maxLength","placeholder","PayByAtm","PaymentCard","payment","PayByShop","paymentFormInit","methods","App","currentMethod","setCurrentMethod","useReducer","useEffect","Provider","map","index","onClick","onMethodClick","key","src","alt","text","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,uKCChCC,EAAgB,CACvBC,OAAO,CACHC,MAAM,GACNC,aAAa,CAAC,GAAG,GAAG,GAAG,IACvBC,YAAY,GACZC,WAAW,GACXC,IAAI,IAGRC,KAAK,GACLC,IAAI,I,mjBCTD,SAASC,EAAmBC,EAAOC,GACtC,GAAGD,EAAME,SAASD,EAAOC,OACrB,OAAO,EAAP,GAAWF,EAAX,CAAiBG,KAAKF,EAAOE,OAEjC,OAAQF,EAAOC,QACX,IAAK,SAEH,OAAO,EAAP,GACKF,EADL,CAEEG,KAAKb,EAAcC,SACvB,IAAK,OACH,YACKS,EADL,CAEEG,KAAKb,EAAcO,OACvB,IAAK,MACH,OAAO,EAAP,GACKG,EADL,CAEEG,KAAKb,EAAcQ,MACvB,QACE,MAAM,IAAIM,MAAM,2BCnBnB,IAAIC,EAAiBC,wBAAc,I,gDCE/BC,EAAiB,CAAC,CACzBC,KAAM,SACNC,MAAM,CAAC,qBAAM,gBACbC,IAAIC,KAEN,CACEH,KAAK,OACLC,MAAM,CAAC,2BAAO,gBACdC,IAAIE,KAEN,CACEJ,KAAK,MACLC,MAAM,CAAC,MAAM,gBACbC,IAAIG,M,yjBCfR,IA2FeC,EA3FG,WAAM,IAAD,EACmBC,qBAAWV,GAA5CW,EADc,EACdA,YADc,KACFC,kBACgBC,mBAASF,EAAYb,OAFnC,mBAEHgB,GAFG,WAIdC,EAAiB,SAACC,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACjBd,EAAOa,EAAEE,OAAOf,KACpBW,EAAc,SAAAK,GACT,IAAIC,EAAYjB,EAAKkB,MAAM,KAAK,GAC5BC,EAAanB,EAAKkB,MAAM,KAAK,GAEjC,GAAIE,MAAMC,QAAQL,EAAKC,KAAiBE,EAAW,CAChD,IAAIG,EAAYN,EAAKC,GAErB,OADAK,EAAUH,GAAcL,EACjB,KAAIE,EAAX,CAAkB/B,aAAaqC,IAE/B,OAAO,KAAIN,EAAX,eAAiBC,EAAWH,OAMxC,OACI,oCACA,yBAAKS,UAAU,cACX,iEACA,2BAAOC,KAAK,QAAQxB,KAAK,QAAQyB,SAAUb,KAE/C,yBAAKW,UAAU,0BACP,wEACA,2BAAOC,KAAK,OACLxB,KAAK,iBACL0B,aAAa,MACbC,UAAU,IACVF,SAAUb,IAEjB,0BAAMW,UAAU,aAAhB,OAEA,2BAAQC,KAAK,OACLxB,KAAK,iBACL0B,aAAa,MACbC,UAAU,IACVF,SAAUb,IAElB,0BAAMW,UAAU,aAAhB,OACA,2BAAQC,KAAK,OACLxB,KAAK,iBACL0B,aAAa,MACbC,UAAU,IACVF,SAAUb,IAClB,0BAAMW,UAAU,aAAhB,OACA,2BAAQC,KAAK,OACLxB,KAAK,iBACL0B,aAAa,MACbC,UAAU,IACVF,SAAUb,IAClB,0BAAMW,UAAU,QAAhB,SAIR,yBAAKA,UAAU,0BACX,kEACA,2BAAOC,KAAK,OACLxB,KAAK,cACL4B,YAAY,KACZH,SAAUb,EACVe,UAAU,MACjB,0BAAMJ,UAAU,oBAAhB,SAEI,sCAEJ,2BAAOC,KAAK,OACLI,YAAY,OACZ5B,KAAK,aACLyB,SAAUb,EACVe,UAAU,MAEjB,0BAAMJ,UAAU,oBAAhB,aAEJ,yBAAKA,UAAU,mCACX,mEACA,2BAAOC,KAAK,OACLxB,KAAK,MACLyB,SAAUb,EACVgB,YAAY,MACZD,UAAU,SC7EdrB,EARG,WACd,OACI,oCACI,2CCKGuB,EARA,WACX,OACI,oCACI,0CCmBGC,EApBG,YAAoB,IAAVC,EAAS,EAATA,QAExB,OACA,oCAES,WACG,OAAOA,GACH,IAAK,SACD,OAAS,kBAAC,EAAD,MACb,IAAK,OACD,OAAS,kBAACC,EAAD,MACb,IAAK,MACD,OAAS,kBAAC,EAAD,OAPpB,KCATC,EAAkB,CACpBvC,OAAQ,GACRC,KAAKb,EAAcoD,EAAQ,GAAGlC,OA8FjBmC,MA3Ff,WAAgB,IAAD,EAC0BzB,mBAASwB,EAAQ,GAAGlC,MAD9C,mBACRoC,EADQ,KACMC,EADN,OAE0BC,qBAAW/C,EAAmB0C,GAFxD,mBAERzB,EAFQ,KAEKC,EAFL,KAWb,OAPA8B,oBAAU,WACR9B,EAAkB,CAACf,OAAO0C,KAC1B,CAACA,IAMD,kBAACvC,EAAe2C,SAAhB,CAAyB1B,MAAO,CAC9BL,oBACAD,gBAEA,yBAAKe,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,iBAAf,8CAGA,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,kBAEZW,EAAQO,IAAI,SAAC/C,EAAOgD,GAClB,OACE,wBAAInB,UAAS,2BAAsBa,IAAgB1C,EAAOM,KAAO,SAAW,IACxE2C,QAAS,YArBjB,SAACjD,GACnB2C,EAAiB3C,GAoBuBkD,CAAclD,EAAOM,OACnC6C,IAAKH,GACP,yBAAKnB,UAAU,YACb,yBAAKuB,IAAG,UAAKpD,EAAOQ,KAAO6C,IAAI,MAEjC,yBAAKxB,UAAU,cAEX7B,EAAOO,MAAMwC,IAAI,SAACO,EAAKN,GAAN,OAAe,wBAAIG,IAAKH,GAAQM,UAQ7D,yBAAKzB,UAAU,uBACX,kBAAC,EAAD,CAAaQ,QAASK,KAE1B,yBAAKb,UAAU,oCAAf,uCAQV,yBAAKA,UAAU,SACb,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,iBAAf,4BAGA,wBAAIA,UAAU,4BACZ,4FAEE,0BAAMA,UAAU,sBAAhB,SAEF,2DAEI,0BAAMA,UAAU,sBAAhB,QAEJ,qDAEI,0BAAMA,UAAU,sBAAhB,QAEJ,2DAEI,0BAAMA,UAAU,sBAAhB,SAIN,yBAAKA,UAAU,eACb,0BAAMA,UAAU,kBAAhB,SACA,0BAAMA,UAAU,2BAAhB,gBCnFE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0048d192.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-light.c4ed4c04.png\";","module.exports = __webpack_public_path__ + \"static/media/shop-light.56e31c57.png\";","module.exports = __webpack_public_path__ + \"static/media/ATM-light.b6736345.png\";","\nexport let defaultSchema = {\n    credit:{\n        email:'', \n        creditNumber:['','','',''],\n        expireMonth:'',\n        expireYear:'',\n        cvv:''\n\n    },\n    shop:{}, \n    atm:{} \n}\n","import {defaultSchema} from '../utils/formSchema'\n\nexport function PaymentFormReducer(state, action){\n    if(state.method===action.method){\n        return {...state,data:action.data}\n    } \n    switch (action.method) {\n        case 'credit':\n          \n          return {\n            ...state,\n            data:defaultSchema.credit};\n        case 'shop':\n          return{\n            ...state,\n            data:defaultSchema.shop};\n        case 'atm':\n          return {\n            ...state,\n            data:defaultSchema.atm};\n        default:\n          throw new Error('No action is provided.');\n    }\n}\n","import  {createContext} from 'react'\n\nexport let PaymentContext = createContext({})","import imgCard from  '../static/card-light.png'\nimport imgShop from '../static/shop-light.png'\nimport imgATM from '../static/ATM-light.png'\n\nexport let paymentMethods = [{\n    name: 'credit', \n    texts:['信用卡','刷卡'],\n    img:imgCard\n  },\n  {\n    name:'shop',\n    texts:['超商代碼','繳費'],\n    img:imgShop\n  },\n  {\n    name:'atm',\n    texts:['ATM','轉帳'],\n    img:imgATM\n  \n  }]","import React,{useContext,useState,useEffect}  from \"react\"\nimport {PaymentContext} from '../context'\nlet PayByCredit = () =>{\n    let {paymentData,paymentDispatcher} = useContext(PaymentContext) \n    let [creditData,setCreditData] = useState(paymentData.data)\n    \n    let  onFormChange   = (e)=>{\n        let value = e.target.value\n        let name = e.target.name\n        setCreditData(prev=>{\n             let inputName = name.split('-')[0]\n             let inputIndex = name.split('-')[1]\n\n             if( Array.isArray(prev[inputName])   && inputIndex){\n                let newCredit = prev[inputName]\n                newCredit[inputIndex] = value\n                return {...prev , creditNumber:newCredit}\n             }else{\n                return {...prev,[inputName]:value }\n             }\n             \n        })\n    }\n    \n    return (\n        <>\n        <div className=\"form-group\">\n            <label >付款人信箱</label>\n            <input type=\"email\" name=\"email\" onChange={onFormChange}  /> \n        </div>\n        <div className=\"form-credit form-group\">\n                <label> 信用卡卡號：</label>\n                <input type=\"text\" \n                       name=\"creditNumber-0\" \n                       autocomplete=\"off\"\n                       maxLength=\"4\"\n                       onChange={onFormChange} />\n\n                <span className=\"separater\"> - </span>\n\n                <input  type=\"text\" \n                        name=\"creditNumber-1\" \n                        autocomplete=\"off\"\n                        maxLength=\"4\" \n                        onChange={onFormChange}/>          \n\n                <span className=\"separater\"> - </span>\n                <input  type=\"text\" \n                        name=\"creditNumber-2\" \n                        autocomplete=\"off\"\n                        maxLength=\"4\" \n                        onChange={onFormChange}/>   \n                <span className=\"separater\"> - </span>\n                <input  type=\"text\" \n                        name=\"creditNumber-3\" \n                        autocomplete=\"off\"\n                        maxLength=\"4\" \n                        onChange={onFormChange}/>   \n                <span className=\"visa\">\n                    VISA\n                </span>\n        </div>\n        <div className=\"form-expire form-group\">\n            <label> 有效年月：</label> \n            <input type=\"text\" \n                   name=\"expireMonth\"\n                   placeholder=\"MM\" \n                   onChange={onFormChange}\n                   maxLength=\"2\"/>\n            <span className=\"separater-expire\"> \n                月  \n                <span>/  </span>\n            </span>\n            <input type=\"text\" \n                   placeholder=\"YYYY\" \n                   name=\"expireYear\"\n                   onChange={onFormChange}\n                   maxLength=\"4\"\n                   />\n            <span className=\"separater-expire\"> 年 </span>\n        </div>\n        <div className=\"form-expire form-group form-cvv\">\n            <label> 背後末三碼 </label> \n            <input type=\"text\" \n                   name=\"cvv\"\n                   onChange={onFormChange}\n                   placeholder=\"CVV\"  \n                   maxLength=\"3\"/>\n        </div>\n        </>\n    )\n} \n\nexport default PayByCredit","import React from \"react\"\n\nlet PayByCredit = () =>{\n    return (\n        <>\n            <h1>PayByShop</h1>\n        </>\n    )\n} \n\nexport default PayByCredit","import React from \"react\"\n\nlet PayByAtm = () =>{\n    return (\n        <>\n            <h1>PayByAtm</h1>\n        </>\n    )\n} \n\nexport default PayByAtm","import  React from 'react'\nimport PayByCredit from './PayByCredit'\nimport PayByShop from './PayByShop'\nimport PayByAtm from './PayByAtm'\nlet PaymentCard = function({payment}){\n    \n    return (\n    <>\n        {\n            (()=>{\n                switch(payment){\n                    case 'credit': \n                        return   <PayByCredit/>\n                    case 'shop': \n                        return   <PayByShop/>\n                    case 'atm': \n                        return   <PayByAtm/>\n\n                }\n            })()\n        }     \n    </>)\n}\n\nexport default PaymentCard","import React,{useState,useReducer,useEffect} from 'react'\n \nimport {PaymentFormReducer} from './reducer' \nimport {PaymentContext} from './context'\nimport {defaultSchema} from './utils/formSchema'\nimport {paymentMethods as methods} from './utils/paymentMethods'\nimport './scss/index.scss'\nimport PaymentCard from './components/PaymentCard'\n\nlet paymentFormInit = {\n  method: '', \n  data:defaultSchema[methods[0].name]\n}\n\nfunction App() {\n  let [currentMethod,setCurrentMethod] = useState(methods[0].name)\n  let [paymentData, paymentDispatcher] = useReducer(PaymentFormReducer,paymentFormInit) \n  \n  useEffect(()=>{\n    paymentDispatcher({method:currentMethod})\n  },[currentMethod])\n\n  let onMethodClick = (method)=>{\n    setCurrentMethod(method)\n  }\n  return (\n    <PaymentContext.Provider value={{\n      paymentDispatcher,\n      paymentData\n      }}>\n      <div className=\"container\"> \n        <div className=\"row m-5\"> \n          <div className=\"col-8\"> \n            <div className=\"wrapper wrapper-payment \"> \n                <div className=\"wrapper-title\"> \n                  請選擇付款方式\n                </div>\n                <div className=\"wrapper-body\">\n                    <ul className=\"tab tab-method\">\n                    {\n                      methods.map((method,index)=>{\n                        return (\n                          <li className={`card card-method ${currentMethod===method.name ? 'active' : ''}` }\n                              onClick={()=>{onMethodClick(method.name)}}\n                              key={index}> \n                            <div className=\"card-img\">\n                              <img src={`${method.img}`} alt=\"\"/>\n                            </div>\n                            <div className=\"card-title\"> \n                              {\n                                method.texts.map((text,index)=>(<h6 key={index}>{text}</h6>)) \n                              }\n                            </div>\n                        </li>\n                        ) \n                      }) \n                    }\n                    </ul>\n                    <div className=\"tab tab-method-page\">\n                        <PaymentCard payment={currentMethod}/>\n                    </div>  \n                    <div className=\"btn btn-teal btn-block py-3 mt-4\"> \n                      確定付款 ($1500)\n                    </div>\n                </div>\n              \n            </div>\n            \n          </div>\n          <div className=\"col-4\">\n            <div className=\"wrapper wrapper-order p-3\"> \n                <div className=\"wrapper-title\"> \n                  我的訂單\n                </div>\n                <ul className=\"wrapper-body flex-column\">\n                  <li> \n                    \b 流浪金屬史萊姆鎧甲 x 1 \n                    <span className=\"price price-single\">1150</span>\n                  </li>\n                  <li>\n                      抗魔戒指 x 1\n                      <span className=\"price price-single\">100</span>\n                  </li>\n                  <li>\n                      萬能藥 x 3  \n                      <span className=\"price price-single\">270</span>\n                  </li>\n                  <li>\n                      賢者藥水 x 1 \n                      <span className=\"price price-single\">130</span>\n                  </li>\n\n                </ul>\n                <div className=\"order-total\">\n                  <span className=\"text-teal pl-2\"> TWD </span>\n                  <span className=\"pr-2 price price-total \">1500 </span>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </PaymentContext.Provider>\n  );\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}